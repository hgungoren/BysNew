using System;
using System.Linq;
using Shouldly;
using System.Threading.Tasks;
using Volo.Abp.Domain.Repositories;
using Xunit;

namespace ToksozBysNew.Accounts
{
    public class AccountsAppServiceTests : ToksozBysNewApplicationTestBase
    {
        private readonly IAccountsAppService _accountsAppService;
        private readonly IRepository<Account, Guid> _accountRepository;

        public AccountsAppServiceTests()
        {
            _accountsAppService = GetRequiredService<IAccountsAppService>();
            _accountRepository = GetRequiredService<IRepository<Account, Guid>>();
        }

        [Fact]
        public async Task GetListAsync()
        {
            // Act
            var result = await _accountsAppService.GetListAsync(new GetAccountsInput());

            // Assert
            result.TotalCount.ShouldBe(2);
            result.Items.Count.ShouldBe(2);
            result.Items.Any(x => x.Id == Guid.Parse("9a558c08-8f12-4645-8c4b-60b8e2095ada")).ShouldBe(true);
            result.Items.Any(x => x.Id == Guid.Parse("c192c8bd-e75e-4a89-9579-cc0facc92dad")).ShouldBe(true);
        }

        [Fact]
        public async Task GetAsync()
        {
            // Act
            var result = await _accountsAppService.GetAsync(Guid.Parse("9a558c08-8f12-4645-8c4b-60b8e2095ada"));

            // Assert
            result.ShouldNotBeNull();
            result.Id.ShouldBe(Guid.Parse("9a558c08-8f12-4645-8c4b-60b8e2095ada"));
        }

        [Fact]
        public async Task CreateAsync()
        {
            // Arrange
            var input = new AccountCreateDto
            {
                AccountCode = "f178a03fdcb4407eb929276408d103ec9d2572f05d9f4b5aa6",
                AccountName = "02d1e741c7734273bfc96df6f5f681847d63a9f7a955464b951155723130480ca846df0e30f7412aa4f356ed3ae014b35364f2675c3e42fdaed2e6eca88eb1a7a5e7053bb43748ef8f844ac8b0e2f62d96f7b15491aa4867811c84d0566dd4d36306d0224aac4ed488b1aff43288635b992448fe96d342b5b6e99d9064f394a",
                Description = "11bf8bc5738e497f8d003726299a0d0bf7fa5b18aef942b8bc77f4b452e08ae172174f67dcad44c7b9f95a3c8bee400eb1759a9f55f8475da9eeab091f0e1f4201ca2b8c666347c9915cf20c63b10ead0cbd56b35508409e997413f377a82c65baf18d3b3f524281b4fdd3e8c0c86f1584cbe4bf9e9841139a32985dc8324c0cc759b5ef67244edd9460edb5eee6ca2d0430476dde574b7e9b57d7b61eec1135ba3c252bc96d428cb3c748d9b275288aefe0a352476c4b98981bca48b4546a2153473ebd5a2243e8a51d06eca1749254e255a9295c264c2b9f884b96b74aea3be9d32919b2c043528fb9e42facec2026cd5390f70f9b47d7b9e0f050b8628d78ce51252c816f4c8ab6fd7dc3f3194aabd2597716e6b84280b2537e76489b909f19d6dca939404973a6973da56435190ff67ee1e9ee854f788892794ddb876bedb22b8d6d8c21428b8502e8de2ffd33d5e998c256c7b644a8b55996f96a5381d68d38fb38166d431ea9fc92837ce18d684e7e8f685422494888200f02a20acd54e21956479bf84a7f83766ebc9414d3f8214e0843283b4d79a375536ac155425e62097733278e41a5a4d0b0d0bf693b911044b9afd37e4d869fba3ed68e8e0e628679837773b44900a44b8efb5698e2e3c7aefed3393c4feabb72682011bb23ccd3af2ffa1dae47669b2145f1f431c3d280479e86dea2458f9d44a84a02df57defe0772cebfb545c98be4e634aedf3a002960c204d0e94a438b1cbba97c935f7b1eda1ba0e22347c2af98744cbdac36cf56f4d228f33242b8bec0733b96791ca0e50a6fd055d14234ad0ac40564a8f8538dcd0d00f1674ad7a611da9ca4a7b12652c1968548014aefa1db6254f75741f88fbe43f40ea64b0c86c8457662e00f620f1a01204dca40bfab5f182c52f3c87751d950f9e188493494d572a8262f5bc9f77aa694a80a4210825738cc4333252cf01721e0914041f9b44f7b8a8f964dca9b9dcd8b71f949b8a5d432d4487a30c4d19ce7211b294c1f973df43c535532b21f2a42a79dbb4414a40278b121bd8b65a57a1504aa04413d85c065328df5ed2aee2c0902af3645ab96ce1f7a5406e5f6911099b66e3941e1b136ca037ccbc2ac78f34a407a514853b221de1da61f5d80c1c28969043240a983121192dbb7dd8390f836b1003e4aca989da2141f28001a2d8ee2b42d3a42f0838e6b908477327754ceba6ad0fa4341bd5dc60ac66fd147a8b0e27a8be641bfa6a3a30c8ecd55ca38dc3f1309674a60b6068072dd44f4f1abc3dd5ea84a4a85badaae64057184a8622bcc6cd0f643fa96aa3d64754b2dce82a229691d0e4880856a2791f4950c5bbed65e3be70246149b08517a01592400562ba8141eb84420b57dc883e0d3d840bbd7974dc6ae4c8d",
                IsActive = true
            };

            // Act
            var serviceResult = await _accountsAppService.CreateAsync(input);

            // Assert
            var result = await _accountRepository.FindAsync(c => c.Id == serviceResult.Id);

            result.ShouldNotBe(null);
            result.AccountCode.ShouldBe("f178a03fdcb4407eb929276408d103ec9d2572f05d9f4b5aa6");
            result.AccountName.ShouldBe("02d1e741c7734273bfc96df6f5f681847d63a9f7a955464b951155723130480ca846df0e30f7412aa4f356ed3ae014b35364f2675c3e42fdaed2e6eca88eb1a7a5e7053bb43748ef8f844ac8b0e2f62d96f7b15491aa4867811c84d0566dd4d36306d0224aac4ed488b1aff43288635b992448fe96d342b5b6e99d9064f394a");
            result.Description.ShouldBe("11bf8bc5738e497f8d003726299a0d0bf7fa5b18aef942b8bc77f4b452e08ae172174f67dcad44c7b9f95a3c8bee400eb1759a9f55f8475da9eeab091f0e1f4201ca2b8c666347c9915cf20c63b10ead0cbd56b35508409e997413f377a82c65baf18d3b3f524281b4fdd3e8c0c86f1584cbe4bf9e9841139a32985dc8324c0cc759b5ef67244edd9460edb5eee6ca2d0430476dde574b7e9b57d7b61eec1135ba3c252bc96d428cb3c748d9b275288aefe0a352476c4b98981bca48b4546a2153473ebd5a2243e8a51d06eca1749254e255a9295c264c2b9f884b96b74aea3be9d32919b2c043528fb9e42facec2026cd5390f70f9b47d7b9e0f050b8628d78ce51252c816f4c8ab6fd7dc3f3194aabd2597716e6b84280b2537e76489b909f19d6dca939404973a6973da56435190ff67ee1e9ee854f788892794ddb876bedb22b8d6d8c21428b8502e8de2ffd33d5e998c256c7b644a8b55996f96a5381d68d38fb38166d431ea9fc92837ce18d684e7e8f685422494888200f02a20acd54e21956479bf84a7f83766ebc9414d3f8214e0843283b4d79a375536ac155425e62097733278e41a5a4d0b0d0bf693b911044b9afd37e4d869fba3ed68e8e0e628679837773b44900a44b8efb5698e2e3c7aefed3393c4feabb72682011bb23ccd3af2ffa1dae47669b2145f1f431c3d280479e86dea2458f9d44a84a02df57defe0772cebfb545c98be4e634aedf3a002960c204d0e94a438b1cbba97c935f7b1eda1ba0e22347c2af98744cbdac36cf56f4d228f33242b8bec0733b96791ca0e50a6fd055d14234ad0ac40564a8f8538dcd0d00f1674ad7a611da9ca4a7b12652c1968548014aefa1db6254f75741f88fbe43f40ea64b0c86c8457662e00f620f1a01204dca40bfab5f182c52f3c87751d950f9e188493494d572a8262f5bc9f77aa694a80a4210825738cc4333252cf01721e0914041f9b44f7b8a8f964dca9b9dcd8b71f949b8a5d432d4487a30c4d19ce7211b294c1f973df43c535532b21f2a42a79dbb4414a40278b121bd8b65a57a1504aa04413d85c065328df5ed2aee2c0902af3645ab96ce1f7a5406e5f6911099b66e3941e1b136ca037ccbc2ac78f34a407a514853b221de1da61f5d80c1c28969043240a983121192dbb7dd8390f836b1003e4aca989da2141f28001a2d8ee2b42d3a42f0838e6b908477327754ceba6ad0fa4341bd5dc60ac66fd147a8b0e27a8be641bfa6a3a30c8ecd55ca38dc3f1309674a60b6068072dd44f4f1abc3dd5ea84a4a85badaae64057184a8622bcc6cd0f643fa96aa3d64754b2dce82a229691d0e4880856a2791f4950c5bbed65e3be70246149b08517a01592400562ba8141eb84420b57dc883e0d3d840bbd7974dc6ae4c8d");
            result.IsActive.ShouldBe(true);
        }

        [Fact]
        public async Task UpdateAsync()
        {
            // Arrange
            var input = new AccountUpdateDto()
            {
                AccountCode = "5e7c0395678f4cd0aa17c5db9b1cfacc80248f6f35c444b282",
                AccountName = "f436995e8c3c4419a3d33f4279342e247c2a5dc848334c4894532aa1d242d82e1511fab34cfc44e4a62b5e64ae2da73c3b8ecced41be4c24a816d7ad2e1662653c7e5a790a134eacb57f9ab316c8791527e5f5a43c1e4238ab3702557bffba998727ca08235940dfb1cbc7da76b46b9e25de7c8c0fbf4cc39c9c31d15bbe6d7",
                Description = "209ce8f4319449028f073d02964e18c8598212680f0948419454df8117a2e34f5e37bdf685fa4d7b9e08d65ae6666cf80cd79772e0aa480d8e8fc499f84035f001997cfcc9a5432992a1256be51c4c662cfba736727b4e51902e0c4a78aa053cde43c79112284602a257e4b67bc0f368e57b68d705c346fbb828624d05eb19fa314b0a2620624fd7a2f3ffb60e33c2d027617c4de252418cb7a52c4ee72ca65350f6386a39a24fd68b311a61cb17da7117e7b5f8989a40679e6533d9a652fa60e9e2ae867cf247a1b57f6d8e4e35c097475060c0ff9646ebbeb67ad8bfc6e63e74d29b81db2a4fc38c523e65238feac04ae0440459c2490fad2c9dd520f34ca750060c697b1045888f5cee5beb03be5da342c974c43a41078e98a7badc0201e0dc3df73ca8dc4ea5be94125b8a195726cd65e58b3973487b9e02696f681dff460b0206bb4cee47ba9f6405c9aac33d89b8f372f964cc4718ae37d77c512e46e4a016d1b51b134d108fa41bbcfcd1cc2d457ffcb977a940e884df09e0b529518a883dd2607089409d8350e4371398cf5c53830045e6d445e98ed05fd501e2e1404e2df9c080834219a066df4d21262da352b0bbd303024ea7afef9d37d821da426dd1fd924461444eae14fb7f88da6df07aad4dba211a4ec4a4b4fc08d8be8c4e5a18cb29c51d4c8fb6b9622c4e014659407b3d5e412e40bd9c34da647cdfdc8a8c01a6d9ec9746018b6e7e4965b4d3c3f23eb2c5e4ba406297099b17d9e34167050eec634546450d821cc246090861a32ef21b7c243a49db8750979e6441fb31c3d6088574c4476aa1cbb367b68f39d71f1d7af611154580834d05ae5b9d537dd73bb73d2e3f48bb80aece47c36f241fd611ab133c064b58b91f123647b0a5673d98a7e26dd14ffcb11622e3110a9931f3956e03d37647ad89efa0372d77fe259339e323cb60436798c99d05264153a10c9ddcc4131a42d1becd110eb2015fa59c87fce8926f478099b23dd9a35dba4b56a781c53acf4a11a95b3eb34174784bab63c7217631415195b221ae510f06b33c92bd2bc1f34e0587142ba58494b4cbee1ad01eb3ad4c4bb24e1fc16009fabe05cb766831024ebbae739c013682869f230b2c19f84940178c038003b524ae5268870f2f83db4a539a5a3957575c01359c0211f9647f44c7bd3e76fd9efbe72ecfec8367ef98417b881731f88392c65e8c61901f688b423b9e3129c5dca238125d4ce96c8ab34d43bf440770ae2ade92e3c92fb4a30c4b4f8d86c2e84ba6f6da81d9d70740be48e1bbb31ffb76ace0e33a585062c49241d395733cda1745b9c5439f009f8dfd42f5af4f3f79bd7bd2747b6f2864fd854886995b102163aa693171d4ba1f58344299a33956a76169aa2cebb4280a312041ef",
                IsActive = true
            };

            // Act
            var serviceResult = await _accountsAppService.UpdateAsync(Guid.Parse("9a558c08-8f12-4645-8c4b-60b8e2095ada"), input);

            // Assert
            var result = await _accountRepository.FindAsync(c => c.Id == serviceResult.Id);

            result.ShouldNotBe(null);
            result.AccountCode.ShouldBe("5e7c0395678f4cd0aa17c5db9b1cfacc80248f6f35c444b282");
            result.AccountName.ShouldBe("f436995e8c3c4419a3d33f4279342e247c2a5dc848334c4894532aa1d242d82e1511fab34cfc44e4a62b5e64ae2da73c3b8ecced41be4c24a816d7ad2e1662653c7e5a790a134eacb57f9ab316c8791527e5f5a43c1e4238ab3702557bffba998727ca08235940dfb1cbc7da76b46b9e25de7c8c0fbf4cc39c9c31d15bbe6d7");
            result.Description.ShouldBe("209ce8f4319449028f073d02964e18c8598212680f0948419454df8117a2e34f5e37bdf685fa4d7b9e08d65ae6666cf80cd79772e0aa480d8e8fc499f84035f001997cfcc9a5432992a1256be51c4c662cfba736727b4e51902e0c4a78aa053cde43c79112284602a257e4b67bc0f368e57b68d705c346fbb828624d05eb19fa314b0a2620624fd7a2f3ffb60e33c2d027617c4de252418cb7a52c4ee72ca65350f6386a39a24fd68b311a61cb17da7117e7b5f8989a40679e6533d9a652fa60e9e2ae867cf247a1b57f6d8e4e35c097475060c0ff9646ebbeb67ad8bfc6e63e74d29b81db2a4fc38c523e65238feac04ae0440459c2490fad2c9dd520f34ca750060c697b1045888f5cee5beb03be5da342c974c43a41078e98a7badc0201e0dc3df73ca8dc4ea5be94125b8a195726cd65e58b3973487b9e02696f681dff460b0206bb4cee47ba9f6405c9aac33d89b8f372f964cc4718ae37d77c512e46e4a016d1b51b134d108fa41bbcfcd1cc2d457ffcb977a940e884df09e0b529518a883dd2607089409d8350e4371398cf5c53830045e6d445e98ed05fd501e2e1404e2df9c080834219a066df4d21262da352b0bbd303024ea7afef9d37d821da426dd1fd924461444eae14fb7f88da6df07aad4dba211a4ec4a4b4fc08d8be8c4e5a18cb29c51d4c8fb6b9622c4e014659407b3d5e412e40bd9c34da647cdfdc8a8c01a6d9ec9746018b6e7e4965b4d3c3f23eb2c5e4ba406297099b17d9e34167050eec634546450d821cc246090861a32ef21b7c243a49db8750979e6441fb31c3d6088574c4476aa1cbb367b68f39d71f1d7af611154580834d05ae5b9d537dd73bb73d2e3f48bb80aece47c36f241fd611ab133c064b58b91f123647b0a5673d98a7e26dd14ffcb11622e3110a9931f3956e03d37647ad89efa0372d77fe259339e323cb60436798c99d05264153a10c9ddcc4131a42d1becd110eb2015fa59c87fce8926f478099b23dd9a35dba4b56a781c53acf4a11a95b3eb34174784bab63c7217631415195b221ae510f06b33c92bd2bc1f34e0587142ba58494b4cbee1ad01eb3ad4c4bb24e1fc16009fabe05cb766831024ebbae739c013682869f230b2c19f84940178c038003b524ae5268870f2f83db4a539a5a3957575c01359c0211f9647f44c7bd3e76fd9efbe72ecfec8367ef98417b881731f88392c65e8c61901f688b423b9e3129c5dca238125d4ce96c8ab34d43bf440770ae2ade92e3c92fb4a30c4b4f8d86c2e84ba6f6da81d9d70740be48e1bbb31ffb76ace0e33a585062c49241d395733cda1745b9c5439f009f8dfd42f5af4f3f79bd7bd2747b6f2864fd854886995b102163aa693171d4ba1f58344299a33956a76169aa2cebb4280a312041ef");
            result.IsActive.ShouldBe(true);
        }

        [Fact]
        public async Task DeleteAsync()
        {
            // Act
            await _accountsAppService.DeleteAsync(Guid.Parse("9a558c08-8f12-4645-8c4b-60b8e2095ada"));

            // Assert
            var result = await _accountRepository.FindAsync(c => c.Id == Guid.Parse("9a558c08-8f12-4645-8c4b-60b8e2095ada"));

            result.ShouldBeNull();
        }
    }
}